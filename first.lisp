;;;
;;; Соболев
;;; Задание 33
;;; Определить функцию, преобразующую список в множество
;;;
(defun Множество (lst)
  ((lambda (голова хвост)
  (cond ((null lst) nil)
        (t (cons голова (Множество (remove голова хвост)))))) (car lst) (cdr lst)))
;;;
(Множество '(1 2 3 1 2 3 3 3 2 2))
;;; (1 2 3)
(Множество '(1 1 2 1 4 1 2 5 7 4 1 2 6 7 5))
;;; (1 2 4 5 7 6)
;;;
;;; ---------------------------------------------------------------------------------
;;; 
;;; Соболев
;;; Задание 45
;;; Написать функцию, вычисляющую расстояние между двумя городами
;;;
(defun Расстояние (a b) 
  (sqrt (+ (expt (- (get a 'x) (get b 'x)) 2)
           (expt (- (get a 'y) (get b 'y)) 2))))

(defun ДобавитьСвойства (lst x y)
  (cond ( (setf (get lst 'x) x)
          (setf (get lst 'y) y))))

(defun ОчиститьВсе (lst)
((lambda (x)
  (cond ((null lst) nil)
        ((remprop lst x) (ОчиститьВсе lst)))) (car (symbol-plist lst))))

(defun Свойства (lst)
((lambda (x)
  (cond ((null lst) nil)
        (x))) (symbol-plist lst)))
;;;
(ДобавитьСвойства 'Симферополь '0 '0)
;;; 0
(ДобавитьСвойства 'Москва '500 '500)
;;; 500
(Расстояние 'Симферополь 'Москва)
;;; 707.1068
;;;
(ДобавитьСвойства 'Питер '10 '10)
;;; 10
(ДобавитьСвойства 'Феодосия '1000 '20)
;;; 20
(Расстояние 'Питер 'Феодосия)
;;; 990.0505
;;;
;;; ---------------------------------------------------------------------------------
;;;
;;; Соболев
;;; Задание 19
;;; Определить функцию (Луковица N), строящую N-уровневый вложенный список.
;;;
(defun Луковица (n &optional (i n) )
    (if (= 0 n)
        i
        (list (Луковица (- n 1) i))))
;;;
(Луковица '1)
;;; (1)
(Луковица '7)
;;; (((((((7)))))))
;;;
;;; ---------------------------------------------------------------------------------
;;;
;;; Задание 12
;;; Соболев
;;; Заменить два подряд идущих одинаковых элемента одним.
;;;
(defun ДваПодряд (lst)
  ((lambda (x y)
     (cond ((null lst) nil)
           ((equal x y) (cons x (ДваПодряд (cddr lst))))
           ((cons x (ДваПодряд (cdr lst)))))) (car lst) (cadr lst)))
;;;
(ДваПодряд '(1 1 1 2 2 3 4 4 4 4 5 6 7))
;;;	(1 1 2 3 4 4 5 6 7)
;;;
(ДваПодряд '(1 1 1 1 1 2 2 2 2 3 3 3 4 4 5))
;;; (1 1 1 2 2 3 3 4 5)
;;;
;;; ---------------------------------------------------------------------------------
;;;
;;; Задание 15
;;; Соболев
;;; Найти скалярное произведение векторов
(defun произв (x y)
  (cond ((and (null x) (null y)) 0)
        ((or (null x) (null y)) (print "список не равен") 0)
        (t (+ (* (car x) (car y)) (произв (cdr x) (cdr y))))))
;;;
(произв '(1 2 3) '(1 2 3))
;;; 14
(произв '(1 2 3 4 5) '(1 2 3))
;;; список не равен
(произв '(1 2 3) '(1 2 3 4 5))
;;; список не равен
;;;
;;; ---------------------------------------------------------------------------------
;;;		
;;; Задание 21
;;; Соболев
;;; Удалить из списка первое вхождение данного элемента.
;;;		
(defun удаление (a b)
  (cond ((null b) nil)
        ((eql a (car b)) (cdr b))
        ((cons (car b) (удаление a (cdr b))))))
;;;
(удаление 'a '(a (b c) d (e f) g))
;;; ((B C) D (E F) G)
;;;
(удаление '1 '(1 1 2 (3 3) 1 (5 8) 4))
;;; (1 2 (3 3) 1 (5 8) 4)
;;;
;;; ---------------------------------------------------------------------------------
;;;		
;;; Задание 27
;;; Соболев
;;; Определить функцию, которая чередовала бы элементы списков.
;;;
(defun чередование (x y)
  (cond ((null x) nil)
   (t (cons (car x) (чередование y (cdr x))))))
;;;
(чередование '(1 2 3 4) '(a b c d))
;;; (1 A 2 B 3 C 4 D)
;;;
(чередование '(1 2 3 4 5) '(а б в г д е ё ж з))
;;; (1 а 2 б 3 в 4 г 5 д)
;;;
;;;	-------------------------------------------------------------
;;;
;;; Задание 47
;;; Соболев
;;; Определить функцию, которая удаляет все свойства символа.
;;;
(defun ДобавитьСвойства (lst)
  (cond ( (setf (get lst 'Вес) '(1900 kg))
          (setf (get lst 'Цвет) '(Красный))
          (setf (get lst 'Кузов) '(Седан))
          (setf (get lst 'Год) '(2010))
          (symbol-plist lst))))

(defun ОчиститьВсе (lst)
((lambda (x)
  (cond ((null lst) nil)
        ((remprop lst x) (ОчиститьВсе lst)))) (car (symbol-plist lst))))

(defun Свойства (lst)
((lambda (x)
  (cond ((null lst) nil)
        (x))) (symbol-plist lst)))
;;;
(ДобавитьСвойства 'avto)
;;; (Год (2010) Кузов (Седан) Цвет (Красный) Вес (1900 KG))
(Свойства 'avto)
;;; (Год (2010) Кузов (Седан) Цвет (Красный) Вес (1900 KG))
(ОчиститьВсе 'avto)
;;; NIL
(Свойства 'avto)
;;; NIL
;;;	-------------------------------------------------------------
